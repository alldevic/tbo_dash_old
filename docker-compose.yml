version: "3.4"

services:
  backend:
    container_name: tbo_backend
    env_file: .env
    user: ${CURRENT_UID}
    environment: 
      - DEBUGPY=${DEBUGPY}
    build:
      context: .
      args:
        - DEBUG=${DEBUG}
      target: deploy
    restart: on-failure
    volumes:
      - .:/app/
      - ./static:/app/static
      - tbo_media:/app/media
    networks:
      private_network:
        ipv4_address: 172.20.0.5
  
  migrate:
    container_name: tbo_migrate
    image: tbo_dash_backend:latest
    entrypoint: python3
    command: manage.py migrate
    volumes:
      - .:/app/
    env_file: .env
    depends_on:
      - postgres
    networks:
      private_network:
  
  collectstatic:
    image: tbo_dash_backend:latest
    entrypoint: python3
    command: manage.py collectstatic --noinput
    volumes:
      - .:/app/
      - ./static:/app/static
    env_file: .env
    depends_on:
      - postgres
    networks:
      private_network:
  
  postgres:
    container_name: tbo_postgres
    env_file: .env
    image: postgres:12-alpine
    restart: on-failure
    volumes:
      - tbo_db_data:/var/lib/postgresql/data
    networks:
      private_network:
        ipv4_address: 172.20.0.6

  nginx:
    container_name: tbo_nginx
    image: nginx:1.17-alpine
    restart: on-failure
    ports:
      - 8000:8000
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/app/static
      - tbo_media:/app/media
    depends_on:
      - postgres
      - backend
    working_dir: /app/
    networks:
      private_network:
        ipv4_address: 172.20.0.7
      default:
          

networks:
  private_network:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  tbo_db_data:
    external: True
  tbo_media:
    external: True
