# Generated by Django 3.0.5 on 2020-04-15 12:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('fw_ver', models.CharField(blank=True, max_length=20, null=True, verbose_name='Версия встроенного ПО')),
                ('hw_info', models.CharField(blank=True, max_length=128, null=True, verbose_name='Информация о железе')),
            ],
            options={
                'verbose_name': 'Устройство',
                'verbose_name_plural': 'Устройства',
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboards.Device', verbose_name='Устройство')),
            ],
            options={
                'verbose_name': 'Датчик',
                'verbose_name_plural': 'Датчики',
            },
        ),
        migrations.CreateModel(
            name='SensorValueType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
            ],
            options={
                'verbose_name': 'Тип датчика',
                'verbose_name_plural': 'Типы датчиков',
            },
        ),
        migrations.CreateModel(
            name='SensorValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Дата')),
                ('value', models.CharField(max_length=128, verbose_name='Значение')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboards.Sensor', verbose_name='Датчик')),
            ],
            options={
                'verbose_name': 'Значение сенсора',
                'verbose_name_plural': 'Значения сенсоров',
            },
        ),
        migrations.AddField(
            model_name='sensor',
            name='value_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboards.SensorValueType', verbose_name='Тип датчика:'),
        ),
        migrations.CreateModel(
            name='Landfill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Organization', verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Полигон',
                'verbose_name_plural': 'Полигоны',
            },
        ),
        migrations.AddField(
            model_name='device',
            name='landfill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboards.Landfill', verbose_name='Полигон'),
        ),
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('landfills', models.ManyToManyField(to='dashboards.Landfill')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Дашборд',
                'verbose_name_plural': 'Дашборды',
            },
        ),
    ]
